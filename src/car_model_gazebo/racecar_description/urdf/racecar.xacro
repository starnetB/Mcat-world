<?xml version="1.0"?>
<robot name="racecar" xmlns:xacro="http://www.ros.org/wiki/xacro">

  <xacro:include filename="$(find racecar_description)/urdf/macros.xacro" />


  <!-- Add chassis and it's inertia link -->
  <!-- 电池模块-->

  <!-- <xacro:property name="battery_x_offset" value="-0.055"/>
  <xacro:property name="battery_dist" value="0.065"/>
  <xacro:property name="battery_comp_depth" value="0.02"/>
  <xacro:property name="battery_comp_angle" value="0.34906585"/>
  <xacro:property name="battery_length" value="0.16"/>
  <xacro:property name="battery_width" value="0.047"/>
  <xacro:property name="battery_height" value="0.024"/>
  <xacro:property name="battery_mass" value="0.5025"/>
  <xacro:property name="prefix" value="LeesBattery"/>

  <xacro:macro name="solid_cuboid_inertial"
               params="width depth height mass *origin">
    <inertial>
      <xacro:insert_block name="origin"/>
      <mass value="${mass}"/>
      <inertia ixx="${mass * (depth * depth + height * height) / 12}"
               ixy="0" ixz="0"
               iyy="${mass * (width * width + height * height) / 12}"
               iyz="0"
               izz="${mass * (width * width + depth * depth) / 12}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="battery" params="prefix reflect">
    <joint name="chassis_to_${prefix}_battery" type="fixed">
      <parent link="chassis"/>
      <child link="${prefix}_battery_offset"/>
      <origin xyz="${battery_x_offset - battery_length / 2}
                   ${reflect * battery_dist / 2}
                   0"
              rpy="${reflect * battery_comp_angle} 0 0"/>
    </joint>

    <link name="${prefix}_battery_offset">
      <xacro:null_inertial/>
    </link>

    <joint name="offset_to_${prefix}_battery" type="fixed">
      <parent link="${prefix}_battery_offset"/>
      <child link="${prefix}_battery"/>
      <origin xyz="0
                   ${reflect * battery_width / 2}
                   ${(battery_height / 2) - battery_comp_depth}"/>
    </joint>

    <link name="${prefix}_battery">
      <visual>
        <geometry>
          <box size="${battery_length} ${battery_width} ${battery_height}"/>
        </geometry>
        <material name="battery_mat"/>
      </visual>

      <collision>
        <geometry>
          <box size="${battery_length} ${battery_width} ${battery_height}"/>
        </geometry>
      </collision>

      <xacro:solid_cuboid_inertial
         width="${battery_length}" depth="${battery_width}"
         height="${battery_height}" mass="${battery_mass}">
        <origin/>
      </xacro:solid_cuboid_inertial>
    </link>

    <gazebo reference="${prefix}_battery">
      <material>Gazebo/Blue</material>
    </gazebo>
  </xacro:macro> -->

  <link name="base_link" />

  <link name="chassis">
    <visual>
      <xacro:chassis_geometry/>
      <material name="blue" />
    </visual>
  </link>

  <joint name="base_link_joint" type="fixed">
    <origin xyz="0 0 0.05" rpy="0 0 0" />
    <parent link="base_link" />
    <child link="chassis" />
  </joint>

  <link name="chassis_inertia">
    <inertial>
      <xacro:chassis_inertial_params />
    </inertial>
  </link>

  <joint name="chassis_inertia_joint" type="fixed">
    <origin xyz="0 0 0" rpy="0 0 0" />
    <parent link="chassis" />
    <child link="chassis_inertia" />
  </joint>

  <!-- Add the left rear wheel with its joints and tranmissions -->

  <link name="left_rear_wheel">
    <inertial>
      <xacro:left_wheels_inertial_params />
    </inertial>
    <visual>
      <xacro:left_rear_wheel_geometry />
      <material name="black" />
    </visual>
    <collision>robot
      <xacro:left_wheels_collision_geometry />
    </collision>
  </link>

  <joint name="left_rear_wheel_joint" type="continuous">
    <origin xyz="0 0.1 0" rpy="1.5708 0 0" />
    <parent link="chassis" />
    <child link="left_rear_wheel" />
    <axis xyz="0 0 -1" />
    <limit effort="10" velocity="100" />
  </joint>

  <xacro:wheel_transmission name="left_rear_wheel" />

  <!-- Add the right rear wheel with its joints and tranmissions -->

  <link name="right_rear_wheel">
    <inertial>
      <xacro:right_wheels_inertial_params />
    </inertial>
    <visual>
      <xacro:right_rear_wheel_geometry />
      <material name="black" />
    </visual>
    <collision>
      <xacro:right_wheels_collision_geometry />
    </collision>
  </link>

  <joint name="right_rear_wheel_joint" type="continuous">
    <origin xyz="0 -0.1 0" rpy="1.5708 0 0" />
    <parent link="chassis" />
    <child link="right_rear_wheel" />
    <axis xyz="0 0 -1" />
    <limit effort="10" velocity="100" />
  </joint>

  <xacro:wheel_transmission name="right_rear_wheel" />

  <!-- Add the left steering hinge with its joints and tranmissions -->

  <link name="left_steering_hinge">
    <inertial>
      <xacro:steering_hinge_inertial_params />
    </inertial>
    <visual>
      <xacro:left_steering_hinge_geometry />
      <material name="grey" />
    </visual>
  </link>

  <joint name="left_steering_hinge_joint" type="revolute">
    <origin xyz="0.325 0.1 0" rpy="0 1.5708 0" />
    <parent link="chassis" />
    <child link="left_steering_hinge" />
    <axis xyz="-1 0 0" />
    <limit lower="-1.0" upper="1.0" effort="10" velocity="100" />
  </joint>

  <xacro:steering_hinge_transmission name="left_steering_hinge" />

  <!-- Add the right steering hinge with its joints and tranmissions -->

  <link name="right_steering_hinge">
    <inertial>
      <xacro:steering_hinge_inertial_params />
    </inertial>
    <visual>
      <xacro:right_steering_hinge_geometry />
      <material name="grey" />
    </visual>
  </link>

  <joint name="right_steering_hinge_joint" type="continuous">
    <origin xyz="0.325 -0.1 0" rpy="0 1.5708 0" />
    <parent link="chassis" />
    <child link="right_steering_hinge" />
    <axis xyz="-1 0 0" />
    <limit lower="-1.0" upper="1.0" effort="10" velocity="100" />
  </joint>

  <xacro:steering_hinge_transmission name="right_steering_hinge" />

  <!-- Add the left front wheel with its joints and tranmissions -->

  <link name="left_front_wheel">
    <inertial>
      <xacro:left_wheels_inertial_params />
    </inertial>
    <visual>
      <xacro:left_front_wheel_geometry />
      <material name="black" />
    </visual>
    <collision>
      <xacro:left_wheels_collision_geometry />
    </collision>
  </link>

  <joint name="left_front_wheel_joint" type="continuous">
    <origin xyz="0 0 0" rpy="1.5708 0 0" />
    <parent link="left_steering_hinge" />
    <child link="left_front_wheel" />
    <axis xyz="0 0 -1" />
    <limit effort="10" velocity="100" />
  </joint>

  <xacro:wheel_transmission name="left_front_wheel" />

  <!-- Add the left front wheel with its joints and tranmissions -->

  <link name="right_front_wheel">
    <inertial>
      <xacro:right_wheels_inertial_params />
    </inertial>
    <visual>
      <xacro:right_front_wheel_geometry />
      <material name="black" />
    </visual>
    <collision>
      <xacro:right_wheels_collision_geometry />
    </collision>
  </link>

  <joint name="right_front_wheel_joint" type="continuous">
    <origin xyz="0 0 0" rpy="1.5708 0 0" />
    <parent link="right_steering_hinge" />
    <child link="right_front_wheel" />
    <axis xyz="0 0 -1" />
    <limit effort="10" velocity="100"/>
  </joint>
  
  <xacro:wheel_transmission name="right_front_wheel" />

  <!-- Add Hokuyo laser scanner -->


  <!-- zed camera -->
  <!-- <link name="zed_camera_link">
    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.033 0.175 0.030"/>
      </geometry>
    </collision>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.033 0.175 0.030"/>
      </geometry>
      <material name="red"/>
    </visual>
  </link> -->

  <!-- <joint name="zed_camera_joint" type="fixed">
    <origin xyz="0.390 0 0.04" rpy="0 0 0"/>
    <parent link="chassis"/>
    <child link="zed_camera_link"/>
    <axis xyz="0 0 1" /> -->
    <!-- <limit lower="0.0" upper="0.0" effort="0.0" velocity="0.0" /> -->
  <!-- </joint> -->


  <!-- zed camera lenses -->
  <!-- It seems these have to have a non-zero mass to have a camera attached? -->
  <!-- this needs to match the name in zed_wrapper/zed_tf.launch -->
  <!-- <link name="camera_link">
    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>
  <link name="zed_camera_right_link">
    <inertial>
      <mass value="1e-5" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6" />
    </inertial>
  </link>

  <joint name="zed_camera_left_joint" type="fixed">
    <origin xyz="0 0.06 0" rpy="0 0 0"/>
    <parent link="zed_camera_link"/>
    <child link="camera_link"/>
    <axis xyz="0 0 1" />
  </joint>
  <joint name="zed_camera_right_joint" type="fixed">
    <origin xyz="0 -0.06 0" rpy="0 0 0"/>
    <parent link="zed_camera_link"/>
    <child link="zed_camera_right_link"/>
    <axis xyz="0 0 1" />
  </joint> -->

  <!-- Add the remaining xacros -->

  <xacro:include filename="$(find racecar_description)/urdf/racecar.gazebo" />
  <xacro:include filename="$(find racecar_description)/urdf/materials.xacro" />


  <link name="laser">
    <inertial>
      <xacro:hokuyo_inertial_params />
    </inertial>
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <box size="0.1 0.1 0.1"/>
      </geometry>
    </collision>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <mesh filename="package://racecar_description/meshes/hokuyo.dae"/>
        <material name="grey" />
      </geometry>
    </visual>
  </link>
  

  <joint name="hokuyo_joint" type="fixed">
    <origin xyz="0.265 0.0 0.075" rpy="0 0 0"/>
    <parent link="chassis" />
    <child link="laser" />
    <axis xyz="0 0 1" />
  </joint>

  <!-- Create laser reference frame -->
  <link name="imu_link">
    <inertial>
        <mass value="0.001" /> 
        <origin xyz="0 0 0" />
        <inertia ixx="0.001" ixy="0.0" ixz="0.0"
                  iyy="0.001" iyz="0.0"
                  izz="0.001" />
    </inertial>
    <visual>
        <origin xyz=" 0 0 0 " rpy="0 0 0" />
        <geometry>
            <box size="0.04 0.04 0.03" />
        </geometry>
        <material name="black"/>
    </visual>
    <collision>
        <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
        <geometry>
            <box size="0.04 0.04 0.03" />
        </geometry>
    </collision>
  </link>
  <gazebo reference="imu_link">
      <material>Gazebo/Blue</material>
  </gazebo>
  <gazebo reference="imu_link">
      <gravity>true</gravity>
      <sensor name="imu_sensor" type="imu">
          <always_on>true</always_on>
          <update_rate>100</update_rate>
          <visualize>true</visualize>
          <topic>/imu_data</topic>
          <plugin filename="libgazebo_ros_imu_sensor.so" name="imu_plugin">
              <topicName>/imu_data</topicName>
              <bodyName>imu_link</bodyName>
              <updateRateHZ>100.0</updateRateHZ>
              <gaussianNoise>0.0</gaussianNoise>
              <xyzOffset>0 0 0</xyzOffset>
              <rpyOffset>0 0 0</rpyOffset>
              <frameName>imu_link</frameName>
          </plugin>
          <pose>0 0 0 0 0 0</pose>
      </sensor>
  </gazebo> 
  <joint name="imu_joint" type="fixed">
    <origin xyz="0.325 0 0.015" rpy="0 0 0" />
    <parent link="chassis"/>
    <child link="imu_link"/>
  </joint>


  <link name="camera_link">
	    <inertial>
		<mass value="0.001" />
		<origin xyz="0 0 0" />
		<inertia ixx="0.001" ixy="0.0" ixz="0.0"
		         iyy="0.001" iyz="0.0"
		         izz="0.001" />
	    </inertial>

	    <visual>
		<origin xyz=" 0 0 0 " rpy="1.57 0 1.57" />
		<geometry>
		    <mesh filename="package://racecar_description/meshes/S1030-0315.dae" scale="0.1 0.1 0.1" />
		</geometry>
	    </visual>

	    <collision>
		<origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
		<geometry>
		    <box size="0.03 0.16 0.03" />
		</geometry>
	    </collision>
	</link>
	<gazebo reference="camera_link">
	  <material>Gazebo/Red</material>
	</gazebo> 
	<gazebo reference="camera_link">
		<sensor type="camera" name="camera_node">
			<pose>0 0 0 0 0 0</pose>
      <update_rate>30.0</update_rate>
      <camera name="head">
          <horizontal_fov>1.3962634</horizontal_fov>
          <image>
              <width>1280</width>
              <height>720</height>
              <format>R8G8B8</format>
          </image>
          <clip>
              <near>0.02</near>
              <far>300</far>
          </clip>
          <noise>
              <type>gaussian</type>
              <mean>0.0</mean>
              <stddev>0.007</stddev>
          </noise>
      </camera>
      <plugin name="gazebo_camera" filename="libgazebo_ros_camera.so">
          <alwaysOn>true</alwaysOn>
          <updateRate>0.0</updateRate>
          <cameraName>/camera_lees</cameraName>
          <imageTopicName>image_raw</imageTopicName>
          <cameraInfoTopicName>camera_info</cameraInfoTopicName>
          <frameName>camera_link</frameName>
          <hackBaseline>0.07</hackBaseline>
          <distortionK1>0.0</distortionK1>
          <distortionK2>0.0</distortionK2>
          <distortionK3>0.0</distortionK3>
          <distortionT1>0.0</distortionT1>
          <distortionT2>0.0</distortionT2>
      </plugin>
		</sensor>
  </gazebo>
  <joint name="camera_joint" type="fixed">
    <origin xyz="0.325 0 0.05" rpy="0 0 0" />
    <parent link="chassis"/>
    <child link="camera_link"/>
  </joint>

  
</robot>
